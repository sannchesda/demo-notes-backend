services:
  server:
    build:
      context: .
      target: runtime
    ports:
      - "80:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_PASSWORD=${DB_PASSWORD:-SqlPassword123!}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-key-that-is-at-least-32-characters-long-for-production}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  # SQL Server DB
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD:-SqlPassword123!}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - db_data:/var/opt/mssql
      - ./setup-database.sql:/docker-entrypoint-initdb.d/setup-database.sql:ro
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "${DB_PASSWORD:-SqlPassword123!}" -Q "SELECT 1" -C || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - app-network

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge
